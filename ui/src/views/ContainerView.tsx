import { Link } from 'react-router-dom';
import { useAppContext } from '../context/AppContext';

import { Typography } from '@mui/material';

import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
  ArcElement,
} from 'chart.js';

// import individual components to save space
import { Bar } from 'react-chartjs-2';
import { Doughnut } from 'react-chartjs-2';

// FAKER FOR DEV TESTING Data
import { faker } from '@faker-js/faker';

ChartJS.register(
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
  ArcElement
);

const ContainerView = () => {
  const {
    currentContainer,
    containers,
    stats,
  } = useAppContext();

  // ## Chart Demo Data ##
  const barOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'top' as const,
      },
      title: {
        display: true,
        text: 'Very Important Container Data',
      },
    },
  };

  const labels = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
  ];

  // bar chart data, generated by faker
  const barData = {
    labels,
    datasets: [
      {
        label: 'Important Dataset 1',
        // data: [120, 190, 300, 500, 900, 350, 200],
        data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),
        backgroundColor: 'rgba(255, 99, 132, 0.5)',
      },
      {
        label: 'Important Dataset 2',
        data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),
        backgroundColor: 'rgba(53, 162, 235, 0.5)',
      },
    ],
  };

  const doughData = {
    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
    datasets: [
      {
        label: '# of Things',
        // data: [12, 19, 3, 5, 2, 3],
        data: labels.map(() => faker.datatype.number({ min: 1, max: 15 })),
        backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)',
        ],
        borderColor: [
          'rgba(255, 99, 132, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)',
        ],
        borderWidth: 1,
      },
    ],
  };

  // ## end chart demo data



  return (
    <>
      <Link to='/'>Link to Root</Link> |&nbsp;
      <Link to='/container'>Link to generic container</Link> |&nbsp;
      <Link to='/containerlogs'>Link to Logs</Link>
      <h3>Content in the container view {currentContainer}</h3>

      <h3>{stats[currentContainer]?.cpu}</h3>
      <Typography>MEM %: {stats[currentContainer]?.memory}</Typography>

      <div
        style={{
          position: 'relative',
          height: '20vh',
          width: '80vw',
          margin: 'auto',
        }}
      >
        <Bar options={barOptions} data={barData} />
      </div>
      <div style={{ position: 'relative', height: '40vw', width: '80vh' }}>
        <Doughnut data={doughData} />
      </div>


      {/* <Typography>Image: {container.Image}</Typography> */}
      <Typography>Typography Goes Here</Typography>

    </>
  );
};

export default ContainerView;
